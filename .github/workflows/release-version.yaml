name: Build, Test, and Release Golang Docker App
# This workflow will be triggered on any push to main branch or via manual trigger

on:
  push:
    branches: [main]
    paths:
      - '**.go'
      - 'Dockerfile'
  pull_request:
    branches: [main]
    paths:
      - '**.go'
      - 'Dockerfile'

jobs:
  build-test-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Build Go App
      run: |
        cd app
        go build -v ./...

    - name: Run Unit Tests
      run: |
        cd app
        go test -v ./...

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      if: github.event_name != 'pull_request'
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract version from Git
      id: version
      run: |
        # Try to use git tag, or fall back to short commit hash, or use 'latest' as last resort
        VERSION=$(git describe --tags --abbrev=0 2>/dev/null || git rev-parse --short HEAD || echo "latest")
        echo "Version: $VERSION"
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/devops-system-design:${{ steps.version.outputs.version }} .

    - name: Push Docker Image
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/devops-system-design:${{ steps.version.outputs.version }}

    - name: Update App Configuration Repository
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      run: |
        # Clone the app configuration repository
        git clone git@github.com:aman556/DevOps-System-Design-app-configuration.git app-config
        cd app-config
        
        # Update the version in values.yaml
        if [ -f golang-app/values.yaml ]; then
          # Use sed to replace the tag value (Linux compatible version)
          sed -i "s/tag: .*$/tag: ${{ steps.version.outputs.version }}/" golang-app/values.yaml
          
          # Configure Git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Commit and push changes
          git add golang-app/values.yaml
          git commit -m "Update image tag to ${{ steps.version.outputs.version }}"
          git push https://${{ secrets.TOKEN }}@github.com/aman556/DevOps-System-Design-app-configuration.git HEAD:main
          
          echo "✅ Successfully updated version in app configuration repository"
        else
          echo "❌ golang-app/values.yaml not found in the repository"
          exit 1
        fi

    - name: Release on GitHub
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
